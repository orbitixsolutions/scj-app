generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id               String @id @default(uuid())
    name             String
    lastName         String
    password         String
    email            String @unique
    documentIdentity String
    role             String @default("STUDENT")
    description      String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    workshops Workshops[]
}

model Students {
    id               String   @id @unique @default(uuid())
    name             String
    lastName         String
    studyYear        String
    institute        String
    documentIdentity String
    dateOfBirth      DateTime
    photo            String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    workshopsId String?
    workshops   Workshops? @relation(fields: [workshopsId], references: [id], onDelete: Cascade)

    Assistences Assistences[]
}

model Workshops {
    id          String         @id @default(uuid())
    name        String
    day         WorkshopDays[]
    description String
    photo       String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    teacher   User   @relation(fields: [teacherId], references: [id], onDelete: Cascade)
    teacherId String

    students    Students[]
    assistences Assistences[]
}

model WorkshopDays {
    id         String @id @default(uuid())
    day        String
    workshopId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Workshops Workshops @relation(fields: [workshopId], references: [id], onDelete: Cascade)
}

model Assistences {
    id         String @id @default(uuid())
    studentId  String
    workshopId String

    asistanceDate DateTime
    status        String   @default("PENDING")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    student  Students  @relation(fields: [studentId], references: [id], onDelete: Cascade)
    workshop Workshops @relation(fields: [workshopId], references: [id], onDelete: Cascade)

    @@index([studentId, workshopId])
}
